//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IRFHotels.HotelClient.IRFHotelsMonitoringReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IRFHotelsMonitoringReference.IMonitoring")]
    public interface IMonitoring {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitoring/ImAlive", ReplyAction="http://tempuri.org/IMonitoring/ImAliveResponse")]
        void ImAlive(int id, int freeRoomCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitoring/ImAlive", ReplyAction="http://tempuri.org/IMonitoring/ImAliveResponse")]
        System.Threading.Tasks.Task ImAliveAsync(int id, int freeRoomCount);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMonitoringChannel : global::IRFHotels.HotelClient.IRFHotelsMonitoringReference.IMonitoring, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MonitoringClient : System.ServiceModel.ClientBase<global::IRFHotels.HotelClient.IRFHotelsMonitoringReference.IMonitoring>, global::IRFHotels.HotelClient.IRFHotelsMonitoringReference.IMonitoring {
        
        public MonitoringClient() {
        }
        
        public MonitoringClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MonitoringClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MonitoringClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MonitoringClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ImAlive(int id, int freeRoomCount) {
            base.Channel.ImAlive(id, freeRoomCount);
        }
        
        public System.Threading.Tasks.Task ImAliveAsync(int id, int freeRoomCount) {
            return base.Channel.ImAliveAsync(id, freeRoomCount);
        }
    }
}
